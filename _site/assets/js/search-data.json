{"0": {
    "doc": "AC215, CSCIE-115",
    "title": "Productionizing AI (MLOps): AC215, CSCIE-115.",
    "content": " ",
    "url": "/#productionizing-ai-mlops-ac215-cscie-115",
    
    "relUrl": "/#productionizing-ai-mlops-ac215-cscie-115"
  },"1": {
    "doc": "AC215, CSCIE-115",
    "title": "Table of contents",
    "content": ". | Course Introduction | Course Topics Overview | Prerequisites | Lectures | Course Components | Course Policies | . IMPORTANT❗ - Draft more details soon ​ . ",
    "url": "/#table-of-contents",
    
    "relUrl": "/#table-of-contents"
  },"2": {
    "doc": "AC215, CSCIE-115",
    "title": "Course Introduction",
    "content": "In today’s AI-driven world, building a robust deep learning model is only half the journey. The real challenge often lies in bringing this model to life in the form of an application that’s scalable, maintainable, and ready for real-world deployment. Welcome to AC215: Productionizing AI (MLOps), where we will traverse the complex landscape of Machine Learning Operations. This course has been meticulously curated to provide a holistic understanding of the complete deep learning workflow, from refining your models to deploying them in production environments. By blending the theoretical aspects with hands-on application, we will dive deep into topics like containerization, cloud functions, data pipelines, and advanced training workflows, among others. Our objective is not only to help you grasp these concepts but also to empower you to build and deploy scalable AI applications. Whether you are an AI enthusiast wanting to understand the intricacies of MLOps or a seasoned professional aiming to fortify your knowledge, this course promises a comprehensive exploration of the production side of AI. ",
    "url": "/#course-introduction",
    
    "relUrl": "/#course-introduction"
  },"3": {
    "doc": "AC215, CSCIE-115",
    "title": "Course Topics Overview",
    "content": "We have designed an in-depth curriculum to ensure a comprehensive understanding of MLOps. Here’s a closer look at the topics we’ll be covering: ​ . | Introduction: . | Begin with an understanding of the importance of MLOps and how it fits in the broader AI and software development ecosystem. ​ | . | Virtual Environments and Virtual Machines: . | Delve into the foundations of isolated software environments, their importance in AI development, and how virtual machines offer a layer of abstraction over physical hardware. ​ | . | Containers: . | Understand the concept of containerization using tools like Docker, and how they differ from virtual machines. ​ | . | Data Pipelines, Dask, &amp; Cloud Storage: . | Learn to create efficient data workflows, use Dask for parallel computing, and understand how cloud storage solutions fit into the MLOps ecosystem. ​ | . | TF Data and TF Records: . | Dive into TensorFlow-specific methods for data ingestion and management, ensuring efficient data preprocessing and storage for your models. ​ | . | Data Parallelization: . | Grasp techniques for distributing data processing tasks across multiple processors or nodes. ​ | . | Data Versioning: . | Explore tools like Pachyderm, and understand the significance of maintaining different versions of datasets for reproducibility and model training. ​ | . | Advanced Training Workflows: . | Deep dive into experiment tracking using tools like Weights &amp; Biases, and harness the power of multi-GPU setups for faster model training. ​ | . | Advanced Inference Workflows: . | Understand the nuances of model optimization techniques like Distillation, Quantization, and Compression. Explore TensorFlow Lite, monitor your models post-deployment, and be prepared for challenges like data drift. ​ | . | Pipeline: . | Study end-to-end MLOps pipelines, their components, and best practices to ensure smooth model deployments.. ​ | . | App Design, Setup, and Code Organization: . | Best practices in designing user-centric AI applications, setting up your development environment, and organizing code for scalability and maintainability. ​ | . | APIs &amp; Frontend: . | Learn about RESTful APIs to serve your models and design user interfaces for seamless user interactions. ​ | . | Scaling (k8): . | Delve into Kubernetes, its significance in deploying containerized applications, and understand how to scale your applications to cater to millions of users. ​ | . | . As we journey through these topics, students will gain a holistic perspective, bridging the gap between model development and real-world deployment. With a blend of theory and practical exercises, this course ensures that by the end, you’re not just familiar with these concepts, but proficient in applying them. ​ . ",
    "url": "/#course-topics-overview",
    
    "relUrl": "/#course-topics-overview"
  },"4": {
    "doc": "AC215, CSCIE-115",
    "title": "Prerequisites",
    "content": "To ensure a seamless learning experience and to make the most of this course, participants are expected to come with a foundational knowledge in the following areas: ​ . | Programming Proficiency in Python: . | A strong command over Python’s basic constructs, including functions, classes, and modules. Familiarity with libraries like NumPy, Pandas, Matplotlib is essential, as they form the backbone of many data manipulation tasks in AI. ​ | . | Deep Learning Framework - Tensorflow: . | A working knowledge of the TensorFlow (or PyTorch) framework is crucial, as many topics will delve into its functionalities and methods. Understanding TensorFlow’s basic operations, data handling, and model building mechanisms will be invaluable. ​ | . | Basic Shell Commands: . | Comfortability in navigating the command-line interface (CLI), executing shell commands, and performing basic file operations are foundational for many MLOps tasks. ​ | . | Basic Data Structures: . | A good grasp of Python’s primary data structures, especially dictionaries and lists, will be instrumental in understanding and manipulating data. ​ | . | File I/O: . | Knowledge of basic file input/output operations in Python, including reading from and writing to files, is vital for tasks involving data storage and manipulation. ​ | . | General AI and ML Concepts: . | While this course is centered around MLOps, a basic understanding of AI and machine learning concepts, including what models are and how they are trained, will set the context for many advanced topics. ​ It’s important to note that while prior knowledge in these areas will provide a solid foundation, the course has been structured to ensure gradual progression. Even if you’re not an expert in all of the prerequisites, a willingness to learn and engage actively in the course’s hands-on components will be crucial for success. If you find yourself struggling with some concepts, we encourage leveraging the course resources, attending office hours, and participating in peer discussions to reinforce your understanding. ​ | . | . ",
    "url": "/#prerequisites",
    
    "relUrl": "/#prerequisites"
  },"5": {
    "doc": "AC215, CSCIE-115",
    "title": "Lectures",
    "content": ". | Location: SEC LL2.224 Lecture Hall | Meeting Time: Tuesday 03:45 PM - 05:00 PM; Thursday 03:45 PM - 05:00 PM | . ",
    "url": "/#lectures",
    
    "relUrl": "/#lectures"
  },"6": {
    "doc": "AC215, CSCIE-115",
    "title": "Course Components",
    "content": ". | Weekly Sessions: Structured lectures focusing on the core topics. | Office Hours: Dedicated time with the instructors and TAs for queries and clarifications. | Team Projects: Collaborative assignments that culminate in the creation of a fully functional AI app. | Discussion Forums: Platforms for peer-to-peer learning, discussions, and knowledge sharing. | Reading Assignments: Curated readings to supplement lecture material and deepen understanding. | . Remember, these components might undergo changes to ensure the best learning experience, so always stay updated with the latest course schedule and announcements. Team Projects: Project-Based Learning: Crafting Your Own AI Solutions . In the dynamic realm of AI and MLOps, hands-on experience is paramount. This course encourages each student to bring a unique perspective by working on self-conceived projects. Here’s what you need to know: . 1. Crafting Your AI Project: . | Students are expected to conceptualize and develop their own projects. While our teaching staff is here to provide ideas and guidance, the core objective is for each student to nurture and shape their original initiative. | By the end of the semester, the aim is to transform your idea into a fully functional web-app or mobile application. | Project Scope: Your project should incorporate some element of modeling, ensuring it aligns with the learning objectives of the course. Moreover, it is essential that every component of the project CAN be evaluable by our teaching staff. | Unleash Your Creativity: Whether you’re driven by a start-up vision, by research lab innovations, or inspired by a personal hobby, this is your platform to bring that idea to life. | . 2. A Guided Demonstration by Pavlos: . | We, the teaching team, will undertake a project that Pavlos proposes throughout the semester. This serves as a demonstration and reference point. | Each week will spotlight a different facet of Pavlos’ project development. This structured showcase offers students a practical insight of course concepts. | Parallelly, students will be prompted to integrate the week’s learnings into their projects, ensuring a steady progression towards their end goals. | . 3. Milestones and Assessment: . | The course will be punctuated with key milestones, designed to assess your project’s evolution and your grasp of the MLOps concepts. Details of these milestones will be shared in due course. | It’s imperative to understand that a significant portion of your grade hinges on these milestones. They are not just checkpoints but pivotal phases that contribute to your project’s holistic development and your learning journey. | . In Summation: . The heart of this course is experiential learning. We fervently believe that your ideas and paralleling them with structured guidance, we can equip you with the tangible skills essential in today’s AI-driven world. ",
    "url": "/#course-components",
    
    "relUrl": "/#course-components"
  },"7": {
    "doc": "AC215, CSCIE-115",
    "title": "Course Policies",
    "content": ". | Getting Help: . | ED Forum: Post questions related to course content, or technical issues on the ED forum. This encourages peer learning and allows teaching staff to address common concerns. We regularly monitor the forum to provide guidance. | Office Hours: Attend office hours if you need personalized assistance or in-depth explanations. | Teaching Staff Helpline: For matters specific to the teaching staff, please send your queries to ac215.2023@gmail.com. | Email the Instructor: For private or individual concerns, please feel free to directly email the instructor. | . | Academic Honesty: . | This course places a strong emphasis on ethical behavior. Whether it’s ethically handling data or attributing the work of others, students are expected to maintain high standards of integrity. | Acceptable Behaviors: Discussing course materials, engaging in office hours, debugging with peers, using and citing small portions of code found online, seeking online knowledge, and seeking guidance from tutors. | Unacceptable Behaviors: Accessing or sharing solutions before submission, plagiarizing, not citing sources of external code or techniques, paying or offering payment for coursework, and sharing course material with future potential students. | Engaging in unacceptable behaviors will lead to disciplinary action. When in doubt, always consult the course instructors. ​ | . | Deadlines: . | Adhering to deadlines is crucial for a consistent learning experience. All quizzes and exercises are due before the day of the next session. No extensions will be provided, so plan your time effectively. ​ | . | Collaboration &amp; Teamwork: . | Collaboration is encouraged, especially for projects. However, ensure you contribute equally and do not divide tasks in a way that prevents you from understanding all parts of the assignment. | . | Feedback &amp; Evaluation: . | Continuous feedback is vital for the learning process. While the course has several grading components, always focus on understanding rather than just marks. Do provide feedback on the course structure, content, and delivery, so we can continually improve. ​ | . | Accessibility: . | We are committed to ensuring that this course is accessible to everyone. If you require special accommodations or have any specific needs, please contact the course administrators as soon as possible. Adherence to accessibility policies and a commitment to fairness, respect for your learning journey, and consideration for the learning journey of your peers are expected from all students. | . | Inclusion and Belonging Statement In this data science class, we strive to create a diverse and inclusive learning environment that respects all identities, including race, gender, class, sexuality, religion, and ability. Our goal is to: . | Advance ethical data science and expose biases in its applications. | Encourage a variety of thoughts, perspectives, and experiences. | Be a supportive resource, open to understanding and adapting to your unique needs. | . | . To foster inclusion: . | Please inform us if your name or pronouns differ from official records. | If something affects your class performance or if you feel uncomfortable with any classroom interactions, reach out to us. You may also find resources at the Harvard Office of Diversity and Inclusion. | Respect and consideration for diverse backgrounds and perspectives are expected from all participants. | . Your feedback is essential in enhancing diversity, inclusion, and ethics within our class. Feel free to contact us or submit anonymous suggestions. ",
    "url": "/#course-policies",
    
    "relUrl": "/#course-policies"
  },"8": {
    "doc": "AC215, CSCIE-115",
    "title": "AC215, CSCIE-115",
    "content": " ",
    "url": "/",
    
    "relUrl": "/"
  },"9": {
    "doc": "Announcements",
    "title": "Announcements",
    "content": "Announcements are stored in the _announcements directory and rendered according to the layout file, _layouts/announcement.html. ",
    "url": "/announcements/",
    
    "relUrl": "/announcements/"
  },"10": {
    "doc": "Announcements",
    "title": "Week 1 Announcement",
    "content": "Apr 8 &middot; 0 min read . | Create a new repository based on Just the Class. | Configure a publishing source for GitHub Pages. Your course website is now live! | Update _config.yml with your course information. | Edit and create .md Markdown files to add your content. | . ",
    "url": "/announcements/",
    
    "relUrl": "/announcements/"
  },"11": {
    "doc": "Announcements",
    "title": "Week 0 Announcement",
    "content": "Apr 1 &middot; 0 min read Hello world! . ",
    "url": "/announcements/",
    
    "relUrl": "/announcements/"
  },"12": {
    "doc": "Calendar",
    "title": "Calendar",
    "content": ". ",
    "url": "/calendar/",
    
    "relUrl": "/calendar/"
  },"13": {
    "doc": "Milestone 1",
    "title": "Project Milestone 1",
    "content": "Key dates: . project proposals due - Sep 14th . staff feedback - Sep 19th . For the first milestone, your team will propose a project that aligns with your personal, professional, and academic interests and passions. Allowing you to propose your own projects, rather than selecting from a predefined list, will enhance your engagement and lead to better learning outcomes. This approach will also foster your independence, critical thinking skills, and creativity, preparing you for real-world scenarios where you may be required to initiate and lead your own projects. Call on your inner data scientist and take charge of your project experience. Step 1 . Teams (Groups of 3-5 students) . You can use Ed for finding teams, once you have found your matches, please use this spreadsheet to enter your team name and members . Step 2 . Submit statement of work . Statement of work should be concise and to the point. We are not expecting any group to produce pages and pages of well-written details! Rather, at its core, the proposal should be a unique and innovative idea that presents a data science problem in an engaging and interesting manner. The proposal should make use of any of the methods covered over the span of the course. Finally, ensure that the scope of your problem/question is clear - there should not be any doubts as to what problem/question you are proposing to solve. In summary, the proposal should include the following information: . Title and Authors:** ** A good title goes a long way in attracting your audience’s attention. A creative title that is informative and relevant is important. Include the title of the project, your names, and your email address . Background and Motivation:** ** Briefly describe your reasons for choosing the topic of interest, including any prior background, research interests, or reading (papers, blog posts, etc.) that prompted you to propose your topic. Data:** ** Data are an essential part of any data science project, and hence finding reasonable data to work with will be paramount. As part of the proposal, you must provide a source(s) for the data that you will explore in the project, including the data source, a description of the data set, and key attributes of the data set, and its relevance to the problem you wish to explore. You are not expected to engage in data cleaning at this stage; however, do indicate if there are any foreseeable problems with data quality that may require substantial work in the exploratory data analysis phase (missingness, merging of datasets, etc.). Statement of work *without references to available, relevant data will not be accepted.** ** Scope:* ** With regard to the scope of your work, we leave this largely to you. The project can be as simple or complex as you want it to be, regardless of the topic you choose. However, note that the goal of the project is to demonstrate thoughtfulness in how you approach an interesting problem. For instance, do not use a model/algorithm nobody in the group understands simply because it performs better. Rather, the project should be a place to practice what you learned, build upon lecture ideas, develop research skills, and have fun! . Deliverables:** ** Submit a PDF or word document of your proposal on canvas by the end of the day on Sep 14th.. Sample Proposal . ",
    "url": "/milestone1/#project-milestone-1",
    
    "relUrl": "/milestone1/#project-milestone-1"
  },"14": {
    "doc": "Milestone 1",
    "title": "Milestone 1",
    "content": " ",
    "url": "/milestone1/",
    
    "relUrl": "/milestone1/"
  },"15": {
    "doc": "Milestone 2",
    "title": "Milestone 2",
    "content": "Milestone 2: The discovery of fire. Building a Scalable and Modular Computing Infrastructure . Objectives: . | Build Atomic Containers for Components: Create containerized solutions for various components using standalone containers that can run independently. This will include the development of atomic containers for individual applications and services involved in the project. | Construct Data Pipelines with Versioning: Design and implement a robust data pipeline that leverages Extract, Transform, Versioning tools like Apache Delta Lake or Pachyderm/DVC. This will enable efficient data handling and version control within the project. | Integrate Distributed Computing and Cloud Storage: Implement distributed computing solutions using tools like Dask, and align with cloud storage systems that support the scale and complexity of the project. | Utilize TensorFlow for Data Management: Implement TF Data and TF Records to enhance data ingestion and management within machine learning components of the project. | Develop Advanced Training Workflows: Implement and optimize complex training workflows including experiment tracking (W&amp;B), multi-GPU training, serverless training (Vertex AI), and Kubeflow. These should align with the machine learning components and training requirements of the project. | . Deliverables: . | Containerized Components: Fully-functional atomic containers for all individual components, aligned and ready for integration within the project architecture. | Virtual Environment Setup: Documented and implemented virtual machines and environments tailored to support the containerized components. | Data Pipeline Implementation: A comprehensive data pipeline with extraction, transformation, and versioning capabilities, including examples of versioned datasets. | Distributed Computing and Storage Integration: Evidence of the implemented distributed computing system and cloud storage solutions, complete with documentation on their configuration and utilization. | Machine Learning Workflow Implementation: Detailed implementation of the advanced training workflows, with evidence of successful training runs, experiment tracking, and utilization of multi-GPU and serverless training. | . This single milestone integrates various advanced computing technologies, focusing on building practical and scalable components. It aligns with topics that may be covered in your lectures, and the project-centric approach ensures that students will gain hands-on experience with relevant industry tools and practices. ",
    "url": "/milestone2/",
    
    "relUrl": "/milestone2/"
  },"16": {
    "doc": "Milestone 3",
    "title": "Milestone 3",
    "content": "Milestone 3: The wheel. Optimization, Monitoring, and Deployment of Scalable Data Solutions . Objectives: . | Distillation/Quantization/Compression, TF lite: Implement methods for model optimization such as distillation, quantization, and compression, using TensorFlow Lite. This will enable deployment in resource-constrained environments. | Model Performance Monitoring, Data Drift Awareness: Develop a comprehensive monitoring solution to continuously track model performance, detect data drift, and ensure awareness of other post-release factors that may impact the system. | Kubeflow and Cloud Functions Integration: Utilize Kubeflow for machine learning workflows and integrate cloud functions to automate and scale various processes within the project, aligning with cloud-native practices. | Build a Hands-on Mega Pipeline App: Design and create a scalable and comprehensive pipeline application that encapsulates all the elements of the project. This “Mega Pipeline” will serve as the unified interface for managing and executing various project components. | . Deliverables: . | Optimized Models: Models that have been distilled, quantized, or compressed using TensorFlow Lite, complete with performance benchmarks and analysis. | Performance Monitoring Solution: A well-documented monitoring system that provides insights into model performance, data drift, and other relevant factors. Includes alerting and reporting mechanisms. | Kubeflow &amp; Cloud Functions Implementation: Documentation and code showcasing the successful integration of Kubeflow for machine learning orchestration and cloud functions for process automation. | Mega Pipeline Application: A fully-functional mega pipeline application that serves as the control center for the project, enabling the seamless execution of various components from data ingestion to model deployment. Should include detailed documentation and user guides. | . Description: . This milestone focuses on the optimization, monitoring, and deployment aspects of a complex data-driven project. It emphasizes efficiency and scalability, utilizing advanced techniques and tools like TensorFlow Lite for model optimization and Kubeflow for machine learning workflows. The integration of a comprehensive performance monitoring system ensures ongoing reliability, and the creation of a “Mega Pipeline” application represents the culminating hands-on experience that brings all elements together in a cohesive, manageable structure. The third milestone builds on the foundational work of the first, driving the project towards completion and ensuring readiness for real-world application. This will provide students with exposure to industry-standard best practices and hands-on experience with cutting-edge tools and methodologies. ",
    "url": "/milestone3/",
    
    "relUrl": "/milestone3/"
  },"17": {
    "doc": "Milestone 5",
    "title": "Milestone 5",
    "content": "Milestone 5: Machines. Development, Deployment, and Scaling of Application . Objectives: . | App Design, Setup, and Code Organization: Design the overall architecture of the application, including its user interface, functionality, and underlying code structure. Focus on intuitive design and clean code organization to ensure maintainability and efficiency. | APIs &amp; Frontend Integration: Develop robust APIs that facilitate communication between the front end and back end of the application. Implement a responsive and user-friendly front-end interface that leverages these APIs to create a seamless user experience. | Deployment Strategy: Define and implement a comprehensive deployment strategy that ensures the application is readily available to end users. This includes setting up continuous integration and continuous deployment (CI/CD) pipelines and considering factors like security, performance, and reliability. | . Deliverables: . | Application Design Document: A detailed design document outlining the application’s architecture, user interface, and code organization principles. | APIs &amp; Frontend Implementation: Working code for the APIs and front-end interface, complete with documentation and testing to verify proper functionality. | Deployment Plan and Execution: A documented deployment plan, along with evidence of successful deployment, including CI/CD pipelines, monitoring, and other deployment best practices. | Kubernetes Scaling Solution: A fully implemented scaling solution using Kubernetes, with detailed documentation on its configuration, policies, and performance under different load scenarios. | . Description: . Milestone 5 emphasizes the final stages of the project, focusing on the development and deployment of a user-facing application that ties together the various components built in previous milestones. From designing an intuitive user interface to implementing scalable solutions with Kubernetes, this milestone ensures that the project is not only functional but also ready for real-world usage. The completion of this milestone signifies a comprehensive understanding of full-stack development, from front-end design to back-end integration, deployment, and scaling. It provides hands-on experience with modern tools and methodologies, preparing students for industry challenges and ensuring that they can apply these skills in their future careers. ",
    "url": "/milestone5/",
    
    "relUrl": "/milestone5/"
  },"18": {
    "doc": "Milestone 6",
    "title": "Milestone 6",
    "content": "Milestone 6: AC215. Final Scaling, Deployment, and Project Presentation . Objectives: . | Scaling with Kubernetes: Continue to refine and expand the Kubernetes-based scaling solution implemented in the previous milestone. Ensure that the application can handle real-world scenarios and peak loads efficiently. | Deployment with Ansible: Implement an automated deployment solution using Ansible. This will enable streamlined deployment processes, configuration management, and ensure consistency across different environments. | Presentation of the Project: Prepare and deliver a comprehensive presentation that highlights the project’s objectives, design, implementation, challenges, and achievements. | GitHub Repository: Organize and publish all code, documentation, and relevant assets in a GitHub repository, ensuring that it’s well-structured and includes clear instructions for anyone who wants to replicate or learn from the project. | Blog Post: Write an informative and engaging blog post summarizing the project, the technologies used, lessons learned, and the overall experience. This can serve as a public showcase of the project and the methodologies employed. | . Deliverables: . | Project Presentation: A compelling presentation (slides and speech) that provides a concise and clear overview of the entire project, suitable for both technical and non-technical audiences. | GitHub Repository: A well-organized GitHub repository containing all the project’s code, documentation, and related resources. | Blog Post: A published blog post that encapsulates the essence of the project, written in a style that appeals to a broad audience. | . Description: . The final milestone represents the culmination of the project, with a focus on perfecting the scaling and deployment aspects, and on communicating the project’s success. It ensures that the project is robust, scalable, and deployable, and that the team can effectively convey the significance and details of the project to diverse audiences. By completing this milestone, students demonstrate not only their technical mastery but also their ability to present complex projects in an accessible way. The inclusion of a GitHub repository and blog post ensures that the project has a lasting impact, providing a valuable resource for others in the field. The final milestone is a comprehensive reflection of the skills, knowledge, and experiences gained throughout the project, embodying a holistic approach to modern software development and deployment. It provides a fitting conclusion to the project, reflecting both the technical achievements and the broader educational objectives. ",
    "url": "/milestone6/",
    
    "relUrl": "/milestone6/"
  },"19": {
    "doc": "Projects",
    "title": "Milestones",
    "content": "Project Milestones - Overview . | Milestones | Brief Description | Due Date | Grade % | . | MS1 | Project Proposals, Team formation - Students submit project proposals and form teams. Staff reviews proposals and return feedback and project approvals by 09/19 | 09/14 | 5 | . | MS2 | EDA, modeling approach description - Students will acquire and preprocess data by carefully considering the following topics in order to gain a better understanding of the data at hand: missingness, data imbalance, data scaling issues, and other expected errors. A brief description of appropriate modelling approach is also part of this milestone. | 09/26 | 10 | . | MS3 | Model training - Students will complete the model training and build a robust pipeline for any further changes. | 10/05 | 15 | . | MS4 | Integrate into containers, CLI based calls etc, data pipeline, data versioning etc, e.g: kubeflow, cloud function | 10/24 | 25 | . | MS5 | Containerized model with fastapi - | 11/14 | 10 | . | MS6 | Slides, App, Medium Post, Video - Students will document the project and publish on medium, also submit slides, github link and create a 6-minute video to present their final deliverables | 12/12 | 35 | . Guidelines, submission instruction for milestones (and medium page) for future project events will be posted as they approach. ",
    "url": "/projects/#milestones",
    
    "relUrl": "/projects/#milestones"
  },"20": {
    "doc": "Projects",
    "title": "Projects",
    "content": " ",
    "url": "/projects/",
    
    "relUrl": "/projects/"
  },"21": {
    "doc": "Schedule",
    "title": "Schedule",
    "content": "Overall schedule . ",
    "url": "/schedule/",
    
    "relUrl": "/schedule/"
  },"22": {
    "doc": "Schedule",
    "title": "Week 1 - Introduction, Virtual Environments and Virtual Machines",
    "content": "Sep 05 Introduction Lecture 1 Sep 07 DemoVirtual Environments and Virtual Machines Lecture 2 ",
    "url": "/schedule/#week-1-introduction-virtual-environments-and-virtual-machines",
    
    "relUrl": "/schedule/#week-1-introduction-virtual-environments-and-virtual-machines"
  },"23": {
    "doc": "Schedule",
    "title": "Week 2 - Containers",
    "content": "Sep 12 Containers I Lecture 3 Sep 14 Containers II Lecture 4 ",
    "url": "/schedule/#week-2-containers",
    
    "relUrl": "/schedule/#week-2-containers"
  },"24": {
    "doc": "Schedule",
    "title": "Week 3 - Data",
    "content": "Sep 19 Data Pipelines, Extract, Transform, Versioning (e.g: Apache Delta Lake, Pachyderm/DVC) Lecture 5 M 1 due Sep 21 Dask, Cloud Storage Lecture 6 ",
    "url": "/schedule/#week-3-data",
    
    "relUrl": "/schedule/#week-3-data"
  },"25": {
    "doc": "Schedule",
    "title": "Week 4 - Data and Models",
    "content": "Sep 26 TF Data and TF Records Lecture 7 Sep 28 Advanced training workflows: experiment tracking (W&amp;B), multi GPU, serverless training (Vertex AI), kubeflow Lecture 8 ",
    "url": "/schedule/#week-4-data-and-models",
    
    "relUrl": "/schedule/#week-4-data-and-models"
  },"26": {
    "doc": "Schedule",
    "title": "Week 5 - Project Week",
    "content": " ",
    "url": "/schedule/#week-5-project-week",
    
    "relUrl": "/schedule/#week-5-project-week"
  },"27": {
    "doc": "Schedule",
    "title": "Week 6 - Model",
    "content": "Oct 10 Distillation/Quantization/Compression, TF lite Lecture 9 Oct 12 Model performance monitoring, data drift, or other post release items to be aware of Lecture 10 ",
    "url": "/schedule/#week-6-model",
    
    "relUrl": "/schedule/#week-6-model"
  },"28": {
    "doc": "Schedule",
    "title": "Week 7 - ML Workflow Management",
    "content": "Oct 17 Kubeflow, cloud functions Lecture 11 Oct 19 Hands on Mega Pipeline App Lecture 12 ",
    "url": "/schedule/#week-7-ml-workflow-management",
    
    "relUrl": "/schedule/#week-7-ml-workflow-management"
  },"29": {
    "doc": "Schedule",
    "title": "Week 8 - Midterm presentations",
    "content": "Oct 26 Midterm presentations ",
    "url": "/schedule/#week-8-midterm-presentations",
    
    "relUrl": "/schedule/#week-8-midterm-presentations"
  },"30": {
    "doc": "Schedule",
    "title": "Week 9 - App Development",
    "content": "Oct 31 App design, setup and code organization Lecture 13 Nov 2 APIs &amp; Frontend Lecture 14 ",
    "url": "/schedule/#week-9-app-development",
    
    "relUrl": "/schedule/#week-9-app-development"
  },"31": {
    "doc": "Schedule",
    "title": "Week 10 - Scaling &amp; Deployment",
    "content": "Nov 7 APIs &amp; Frontend Lecture 15 Nov 9 Deployment Lecture 16 ",
    "url": "/schedule/#week-10-scaling-deployment",
    
    "relUrl": "/schedule/#week-10-scaling-deployment"
  },"32": {
    "doc": "Schedule",
    "title": "Week 11 - Scaling &amp; Deployment",
    "content": "Nov 14 Scaling: Kubernetes Lecture 17 Nov 16 Project ",
    "url": "/schedule/#week-11-scaling-deployment",
    
    "relUrl": "/schedule/#week-11-scaling-deployment"
  },"33": {
    "doc": "Schedule",
    "title": "Week 12 - Thanks giving",
    "content": " ",
    "url": "/schedule/#week-12-thanks-giving",
    
    "relUrl": "/schedule/#week-12-thanks-giving"
  },"34": {
    "doc": "Schedule",
    "title": "Week 13 - Scaling &amp; Deployment",
    "content": "Nov 28 Scaling: Kubernetes Lecture 18 Nov 30 Deployment: Ansible Lecture 19 ",
    "url": "/schedule/#week-13-scaling-deployment",
    
    "relUrl": "/schedule/#week-13-scaling-deployment"
  },"35": {
    "doc": "Schedule",
    "title": "Week 14 - Reading Time/Project",
    "content": "Dec 5-9 Project Work ",
    "url": "/schedule/#week-14-reading-time-project",
    
    "relUrl": "/schedule/#week-14-reading-time-project"
  },"36": {
    "doc": "Schedule",
    "title": "Week 15 - Presentations",
    "content": "Dec 12 Presentations ",
    "url": "/schedule/#week-15-presentations",
    
    "relUrl": "/schedule/#week-15-presentations"
  },"37": {
    "doc": "Staff / Contact",
    "title": "Staff",
    "content": " ",
    "url": "/staff/#staff",
    
    "relUrl": "/staff/#staff"
  },"38": {
    "doc": "Staff / Contact",
    "title": "Instructor",
    "content": "Pavlos Protopapas . ",
    "url": "/staff/#instructor",
    
    "relUrl": "/staff/#instructor"
  },"39": {
    "doc": "Staff / Contact",
    "title": "Course Staff",
    "content": "Rashmi Banthia . Andrew Smith . Connor Capitolo . Shivas Jayaram . ",
    "url": "/staff/#course-staff",
    
    "relUrl": "/staff/#course-staff"
  },"40": {
    "doc": "Staff / Contact",
    "title": "Contact",
    "content": "For administrative or logistical questions, please e-mail class Helpline at ac215.2023@gmail.com . ",
    "url": "/staff/#contact",
    
    "relUrl": "/staff/#contact"
  },"41": {
    "doc": "Staff / Contact",
    "title": "Staff / Contact",
    "content": " ",
    "url": "/staff/",
    
    "relUrl": "/staff/"
  }
}
