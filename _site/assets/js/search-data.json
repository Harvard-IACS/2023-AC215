{"0": {
    "doc": "AC215, CSCIE-115",
    "title": "Productionizing AI (MLOps): AC215, CSCIE-115.",
    "content": " ",
    "url": "/#productionizing-ai-mlops-ac215-cscie-115",
    
    "relUrl": "/#productionizing-ai-mlops-ac215-cscie-115"
  },"1": {
    "doc": "AC215, CSCIE-115",
    "title": "Table of contents",
    "content": ". | Course Introduction | Lectures | Course Topics Overview | Prerequisites | Course Components | Grade Distribution | Course Policies | Accessibility: | Inclusion and Belonging Statement | . Version 9/4/2023  ​ . ",
    "url": "/#table-of-contents",
    
    "relUrl": "/#table-of-contents"
  },"2": {
    "doc": "AC215, CSCIE-115",
    "title": "Course Introduction",
    "content": "In today’s AI-driven world, building a robust deep learning model is only half the journey. The real challenge often lies in bringing this model to life in the form of an application that’s scalable, maintainable, and ready for real-world deployment. Welcome to AC215: Productionizing AI (MLOps), where we will traverse the complex landscape of Machine Learning Operations. This course has been meticulously curated to provide a holistic understanding of the complete deep learning workflow, from refining your models to deploying them in production environments. By blending the theoretical aspects with hands-on application, we will dive deep into topics like containerization, cloud functions, data pipelines, and advanced training workflows, among others. Our objective is not only to help you grasp these concepts but also to empower you to build and deploy scalable AI applications. Whether you are an AI enthusiast wanting to understand the intricacies of MLOps or a seasoned professional aiming to fortify your knowledge, this course promises a comprehensive exploration of the production side of AI. ",
    "url": "/#course-introduction",
    
    "relUrl": "/#course-introduction"
  },"3": {
    "doc": "AC215, CSCIE-115",
    "title": "Lectures",
    "content": ". | Location: SEC 1.321/Winokur, 150 Western Ave, Boston . | Meeting Time: Tuesday 03:45 PM - 05:00 PM; Thursday 03:45 PM - 05:00 PM . | . ",
    "url": "/#lectures",
    
    "relUrl": "/#lectures"
  },"4": {
    "doc": "AC215, CSCIE-115",
    "title": "Course Topics Overview",
    "content": "We have designed an in-depth curriculum to ensure a comprehensive understanding of MLOps. Here’s a closer look at the topics we’ll be covering (see here for a full list of topics): . | Introduction: . | Begin with an understanding of the importance of MLOps and how it fits in the broader AI and software development ecosystem. ​ | . | Virtual Environments and Virtual Machines: . | Delve into the foundations of isolated software environments, their importance in AI development, and how virtual machines offer a layer of abstraction over physical hardware. ​ | . | Containers: . | Understand the concept of containerization using tools like Docker, and how they differ from virtual machines. ​ | . | Data Pipelines, Dask, &amp; Cloud Storage: . | Learn to create efficient data workflows, use Dask for parallel computing, and understand how cloud storage solutions fit into the MLOps ecosystem. ​ | . | TF Data and TF Records: . | Dive into TensorFlow-specific methods for data ingestion and management, ensuring efficient data preprocessing and storage for your models. ​ | . | Data Parallelization: . | Grasp techniques for distributing data processing tasks across multiple processors or nodes. ​ | . | Data Versioning: . | Explore tools like Pachyderm, and understand the significance of maintaining different versions of datasets for reproducibility and model training. ​ | . | Advanced Training Workflows: . | Deep dive into experiment tracking using tools like Weights &amp; Biases, and harness the power of multi-GPU setups for faster model training. ​ | . | Advanced Inference Workflows: . | Understand the nuances of model optimization techniques like Distillation, Quantization, and Compression. Explore TensorFlow Lite, monitor your models post-deployment, and be prepared for challenges like data drift. ​ | . | Pipeline: . | Study end-to-end MLOps pipelines, their components, and best practices to ensure smooth model deployments.. ​ | . | App Design, Setup, and Code Organization: . | Best practices in designing user-centric AI applications, setting up your development environment, and organizing code for scalability and maintainability. ​ | . | APIs &amp; Frontend: . | Learn about RESTful APIs to serve your models and design user interfaces for seamless user interactions. ​ | . | Scaling (k8): . | Delve into Kubernetes, its significance in deploying containerized applications, and understand how to scale your applications to cater to millions of users. ​ | . | . As we journey through these topics, students will gain a holistic perspective, bridging the gap between model development and real-world deployment. With a blend of theory and practical exercises, this course ensures that by the end, you’re not just familiar with these concepts, but proficient in applying them. ​ . ",
    "url": "/#course-topics-overview",
    
    "relUrl": "/#course-topics-overview"
  },"5": {
    "doc": "AC215, CSCIE-115",
    "title": "Prerequisites",
    "content": "To ensure a seamless learning experience and to make the most of this course, participants are expected to come with a foundational knowledge in the following areas: ​ . | Programming Proficiency in Python: . | A strong command over Python’s basic constructs, including functions, classes, and modules. Familiarity with libraries like NumPy, Pandas, Matplotlib is essential, as they form the backbone of many data manipulation tasks in AI. ​ | . | Deep Learning Framework - Tensorflow: . | A working knowledge of the TensorFlow (or PyTorch) framework is crucial, as many topics will delve into its functionalities and methods. Understanding TensorFlow’s basic operations, data handling, and model building mechanisms will be invaluable. ​ | . | Basic Shell Commands: . | Comfortability in navigating the command-line interface (CLI), executing shell commands, and performing basic file operations are foundational for many MLOps tasks. ​ | . | Basic Data Structures: . | A good grasp of Python’s primary data structures, especially dictionaries and lists, will be instrumental in understanding and manipulating data. ​ | . | File I/O: . | Knowledge of basic file input/output operations in Python, including reading from and writing to files, is vital for tasks involving data storage and manipulation. ​ | . | General AI and ML Concepts: . | While this course is centered around MLOps, a basic understanding of AI and machine learning concepts, including what models are and how they are trained, will set the context for many advanced topics. | . | . It’s important to note that while prior knowledge in these areas will provide a solid foundation, the course has been structured to ensure gradual progression. Even if you’re not an expert in all of the prerequisites, a willingness to learn and engage actively in the course’s hands-on components will be crucial for success. If you find yourself struggling with some concepts, we encourage leveraging the course resources, attending office hours, and participating in peer discussions to reinforce your understanding. ​ . ",
    "url": "/#prerequisites",
    
    "relUrl": "/#prerequisites"
  },"6": {
    "doc": "AC215, CSCIE-115",
    "title": "Course Components",
    "content": ". | Weekly Sessions: Structured lectures focusing on the core topics. | Office Hours: This is a dedicated period where you can consult with your TF for any questions, clarifications, or guidance you may require for your course project. | Team Projects: Collaborative assignments that culminate in the creation of a fully functional AI app. | Discussion Forums: Platforms for peer-to-peer learning, discussions, and knowledge sharing. | Supplementary Readings: To complement the topics covered in lectures and enrich your academic comprehension, a selection of readings has been curated. As this is an evolving field, the ability to continuously update your knowledge through independent reading is an integral part of the course. | . Team Projects: Project-Based Learning: Crafting Your Own AI Solutions . In the dynamic realm of AI and MLOps, hands-on experience is paramount. This course encourages each student to bring a unique perspective by working on self-conceived projects. Here’s what you need to know: . 1. Crafting Your AI Project: . | Students are expected to conceptualize and develop their own projects. While our teaching staff is here to provide ideas and guidance, the core objective is for each student to nurture and shape their original initiative. | By the end of the semester, the aim is to transform your idea into a fully functional web-app or mobile application. | Project Scope: Your project should incorporate some element of modeling, ensuring it aligns with the learning objectives of the course. Moreover, it is essential that every component of the project CAN be evaluable by our teaching staff. | Unleash Your Creativity: Whether you’re driven by a start-up vision, by research lab innovations, or inspired by a personal hobby, this is your platform to bring that idea to life. | . 2. A Guided Demonstration by Pavlos: . | We, the teaching team, will undertake a project that Pavlos proposes throughout the semester. This serves as a demonstration and reference point. | Each week will spotlight a different facet of Pavlos’ project development. This structured showcase offers students a practical insight of course concepts. | Parallelly, students will be prompted to integrate the week’s learnings into their projects, ensuring a steady progression towards their end goals. | . 3. Milestones and Assessment: . | The course will be punctuated with key milestones, designed to assess your project’s evolution and your grasp of the MLOps concepts. Details of these milestones will be shared in due course. | It’s imperative to understand that a significant portion of your grade hinges on these milestones. They are not just checkpoints but pivotal phases that contribute to your project’s holistic development and your learning journey. | . In Summation: . The heart of this course is experiential learning. We fervently believe that your ideas and paralleling them with structured guidance, we can equip you with the tangible skills essential in today’s AI-driven world. ",
    "url": "/#course-components",
    
    "relUrl": "/#course-components"
  },"7": {
    "doc": "AC215, CSCIE-115",
    "title": "Grade Distribution",
    "content": "| Milestone | Weight | . | MS1 | 5 | . | MS2 | 10 | . | MS3 | 15 | . | MS4 | 25 | . | MS5 | 10 | . | MS6 | 35 | . For more information about the projects and milestones, you can either click the links provided above or visit the project page. ",
    "url": "/#grade-distribution",
    
    "relUrl": "/#grade-distribution"
  },"8": {
    "doc": "AC215, CSCIE-115",
    "title": "Course Policies",
    "content": ". | Getting Help: . | ED Forum: Post questions related to course content, or technical issues on the ED forum. This encourages peer learning and allows teaching staff to address common concerns. We regularly monitor the forum to provide guidance. | Office Hours: Attend office hours if you need personalized assistance or in-depth explanations. | Teaching Staff Helpline: For matters specific to the teaching staff, please send your queries to ac215.2023@gmail.com. | Email the Instructor: For private or individual concerns, please feel free to directly email the instructor. | . | Deadline Policy: . Consistent and timely completion of assignments is imperative in this course. All course milestones must be submitted by 9:00 PM EST on the specified due dates. You are granted a total leeway of five late days throughout the course duration, with a maximum of two late days allowed for any single milestone. Should you need to utilize late days, please inform the class helpline via email at ac215.2023@gmail.com prior to the deadline. This ensures that the teaching team is aware of your situation and can account for it when grading. Final Milestone: It’s important to note that no extensions will be permitted for the final milestone, under any circumstances. Therefore, careful time management is strongly encouraged to ensure that you can meet this critical deadline. | Academic Honesty: . | This course places a strong emphasis on ethical behavior. Whether it’s ethically handling data or attributing the work of others, students are expected to maintain high standards of integrity. | Acceptable Behaviors: Discussing course materials, engaging in office hours, debugging with peers, using and citing small portions of code found online, seeking online knowledge, and seeking guidance from tutors. | Unacceptable Behaviors: Accessing or sharing solutions before submission, plagiarizing, not citing sources of external code or techniques, paying or offering payment for coursework, and sharing course material with future potential students. | Engaging in unacceptable behaviors will lead to disciplinary action. When in doubt, always consult the course instructors. ​ ​ | . | Collaboration &amp; Teamwork: . | Collaboration is encouraged, especially for projects. However, ensure you contribute equally and do not divide tasks in a way that prevents you from understanding all parts of the assignment. | . | Feedback &amp; Evaluation: . | Continuous feedback is vital for the learning process. While the course has several grading components, always focus on understanding rather than just marks. Do provide feedback on the course structure, content, and delivery, so we can continually improve. | . | . ",
    "url": "/#course-policies",
    
    "relUrl": "/#course-policies"
  },"9": {
    "doc": "AC215, CSCIE-115",
    "title": "Accessibility:",
    "content": "We are committed to ensuring that this course is accessible to everyone. If you require special accommodations or have any specific needs, please contact the course administrators as soon as possible. Adherence to accessibility policies and a commitment to fairness, respect for your learning journey, and consideration for the learning journey of your peers are expected from all students. ",
    "url": "/#accessibility",
    
    "relUrl": "/#accessibility"
  },"10": {
    "doc": "AC215, CSCIE-115",
    "title": "Inclusion and Belonging Statement",
    "content": "In this data science class, we strive to create a diverse and inclusive learning environment that respects all identities, including race, gender, class, sexuality, religion, and ability. Our goal is to: . | Advance ethical data science and expose biases in its applications. | Encourage a variety of thoughts, perspectives, and experiences. | Be a supportive resource, open to understanding and adapting to your unique needs. | . To foster inclusion: . | Please inform us if your name or pronouns differ from official records. | If something affects your class performance or if you feel uncomfortable with any classroom interactions, reach out to us. You may also find resources at the Harvard Office of Diversity and Inclusion. | Respect and consideration for diverse backgrounds and perspectives are expected from all participants. | Your feedback is essential in enhancing diversity, inclusion, and ethics within our class. Feel free to contact us or submit anonymous suggestions. | . ",
    "url": "/#inclusion-and-belonging-statement",
    
    "relUrl": "/#inclusion-and-belonging-statement"
  },"11": {
    "doc": "AC215, CSCIE-115",
    "title": "AC215, CSCIE-115",
    "content": " ",
    "url": "/",
    
    "relUrl": "/"
  },"12": {
    "doc": "Announcements",
    "title": "Announcements",
    "content": "Announcements are stored in the _announcements directory and rendered according to the layout file, _layouts/announcement.html. ",
    "url": "/announcements/",
    
    "relUrl": "/announcements/"
  },"13": {
    "doc": "Announcements",
    "title": "Week 1 Announcement",
    "content": "Apr 8 &middot; 0 min read . | Create a new repository based on Just the Class. | Configure a publishing source for GitHub Pages. Your course website is now live! | Update _config.yml with your course information. | Edit and create .md Markdown files to add your content. | . ",
    "url": "/announcements/",
    
    "relUrl": "/announcements/"
  },"14": {
    "doc": "Announcements",
    "title": "Week 0 Announcement",
    "content": "Apr 1 &middot; 0 min read Hello world! . ",
    "url": "/announcements/",
    
    "relUrl": "/announcements/"
  },"15": {
    "doc": "Calendar",
    "title": "Calendar",
    "content": ". ",
    "url": "/calendar/",
    
    "relUrl": "/calendar/"
  },"16": {
    "doc": "FAQs",
    "title": "FAQs",
    "content": "Can I view the video recordings for the course? . Absolutely. All students enrolled in AC215 / CSCIE-115 have access to video recordings for the course. Is there a class GitHub repository? . Indeed. You can find it at https://github.com/Harvard-IACS/2023-AC215. Is it necessary for me to be present for the live lectures? . While university policies require all AC215 students to attend the lectures, we don’t officially record attendance. It’s worth mentioning that all lectures are videotaped, so you can watch them later if you can’t attend. However, missing the live sessions means you’ll miss the opportunity for real-time interaction with the instructors and your classmates. Can I audit this class? . For this specific course, no auditing is allowed. This decision is in place to ensure the highest quality of education and resource allocation for enrolled students. We appreciate your interest but are unable to accommodate auditors at this time. If you are interested in the course material, we recommend that you enroll in the course during a future semester if possible. Alternatively, materials such as syllabi, tutorials, lectures and reading lists will be publicly available, and we encourage you to explore these resources independently. ",
    "url": "/faq/",
    
    "relUrl": "/faq/"
  },"17": {
    "doc": "Milestone 1",
    "title": "ButterFlyer",
    "content": ". ",
    "url": "/milestone1/#butterflyer",
    
    "relUrl": "/milestone1/#butterflyer"
  },"18": {
    "doc": "Milestone 1",
    "title": "Statement of Work for Project “”",
    "content": " ",
    "url": "/milestone1/#statement-of-work-for-project-",
    
    "relUrl": "/milestone1/#statement-of-work-for-project-"
  },"19": {
    "doc": "Milestone 1",
    "title": "Team Members",
    "content": ". | [Pavlov Protovief] | [Paolo Primopadre] | [Pablo El Padron ] ",
    "url": "/milestone1/#team-members",
    
    "relUrl": "/milestone1/#team-members"
  },"20": {
    "doc": "Milestone 1",
    "title": "Contact Information",
    "content": "| [pavlos@pleasedonotemailme.com] | . Problem Statement . To develop an application that can identify various species of butterflies in the wild using computer vision and offer educational content through a chatbot interface. Minimum Components for a Good Project . | Large Data: Collection and utilization of a varied and substantial dataset of butterfly images. | Scalability: Ability to handle multiple users querying the computer vision model and chatbot simultaneously. | Complex Models: Use of deep learning-based computer vision models for accurate species identification. | Computationally Expensive Inference: Implementation of efficient algorithms to minimize latency during species identification. | . Objectives . | Collect and preprocess a diverse dataset of butterfly images. | Develop a computer vision model to identify butterfly species. | Implement a scalable backend to handle multiple queries. | Design an intuitive and user-friendly frontend. | Integrate a chatbot for answering user questions about butterflies. | . Learning Emphasis . The project will focus on employing a convolutional neural network for image recognition and natural language processing techniques for the chatbot, both areas covered in the course. Application Mock Design . The application will feature two main interfaces: . | A camera interface for capturing butterfly images. | A chatbot interface to interact with users. (Additional wireframes or mock-ups can be attached). | . Objectives . | Collect and preprocess a diverse dataset of butterfly images: . | Data Source: The dataset will primarily come from public repositories like [X Dataset Source] and [Y Dataset Source]. We will also supplement this with images captured during field trips and those sourced from citizen science platforms. | Data Attributes: Images should ideally be labeled with the species name, geographic location, and date of capture. | Data Relevance: The comprehensiveness of the dataset is vital for training a robust computer vision model capable of identifying a wide range of butterfly species. | . (Note: If acquiring new images, all team members should adhere to ethical guidelines concerning wildlife photography and data collection.) . | . | Source: Data will be collated from a combination of open-source databases, user-generated content from platforms like iNaturalist, and field data collection by team members. | Description: The dataset will comprise images of various butterfly species, ideally annotated with species names and other metadata like geographic location and date. | Key Attributes: The dataset should include high-resolution images suitable for computer vision algorithms, along with associated metadata to enrich the model’s understanding. | Relevance: The dataset is fundamental to train the computer vision model to identify different species of butterflies accurately. | Data Quality: We anticipate that some images might be poorly labeled or low in quality. These will either be cleaned or supplemented with additional data. | . Research and Development . We will review literature and open-source projects related to computer vision in biological classification and natural language processing for educational chatbots. Fun Factor . Exploring the intersection of biology and technology, while learning about butterflies, makes this project particularly engaging. Limitations and Risks . | Possible challenges in obtaining a large and diverse enough dataset. | Computational limitations when deploying complex models. | . Milestones . | Data collection and preprocessing: [Tentative Deadline] | Computer vision model development: [Tentative Deadline] | Backend implementation: [Tentative Deadline] | Frontend development: [Tentative Deadline] | Chatbot integration: [Tentative Deadline] | Final testing and deployment: [Tentative Deadline] | . ",
    "url": "/milestone1/#contact-information",
    
    "relUrl": "/milestone1/#contact-information"
  },"21": {
    "doc": "Milestone 1",
    "title": "Milestone 1",
    "content": "Project Milestone 1 (the promytheus phase): Project Proposals, Team formation . Key dates: . | project proposals due: Sep 14th | staff feedback: Sep 19th | . Objectives: . For the first milestone, your team will propose a project that aligns with your personal, professional, and academic interests and passions. Allowing you to propose your own projects, will enhance your engagement and lead to better learning outcomes. This approach will also foster your independence, critical thinking skills, and creativity, preparing you for real-world scenarios where you may be required to initiate and lead your own projects. Call on your inner data scientist and take charge of your project experience. Step 1: Create Teams (Groups of 3-5 Students) . Platform for Team Formation: You may use the Ed platform to find your teammates. Alternatively, you may form teams independently. Team Registration: Once you have finalized your team, please enter your team name and the names of team members in this shared spreadsheet. Step 2: Submit Statement of Work (Project Proposal) . Your Statement of Work should act as a blueprint for your project. It doesn’t have to be extensive, but it should be clear and focused. Components of the Statement of Work: . Title and Authors: . | Title: An engaging, relevant, and informative title that captures the essence of your project. | Authors: Names of all team members and their respective email addresses. | . Background and Motivation: . Provide a brief background on the topic you have chosen. Explain why you find it interesting or important, and mention any previous background, research interests, or readings that have influenced your choice. Scope and Objectives: . Clearly outline the problem or question your project aims to solve. Make sure the scope is well-defined so that there is no ambiguity regarding your project’s objectives. Submission Guidelines: . | Length: 1-2 pages . | Format: PDF . | Submit via [TBD] . | . Your draft provides a good outline for what students need to consider regarding the data for their projects. However, it might be beneficial to structure it a bit more for clarity. Here’s a revised version with some suggestions: . Step 3: Discuss Data Sources . Data is the backbone of any data science project and therefore for any MLOps project, making it crucial to identify appropriate datasets for your endeavor. In your Statement of Work, you must address the following aspects regarding data: . Source of Data: . | Identify where the data comes from (e.g., public repository, generated by the team, etc.). | . Description of Dataset: . | Offer a brief overview of what the dataset contains. Is it time-series data, images, textual data, etc.? | . Key Attributes: . | Describe the variables or features that are most relevant to your problem. | . Relevance to the Project: . | Explain how the data is suited to solving the problem or question you’ve posed. Why is this data set useful or relevant? | . Data Quality Concerns: . | If applicable, indicate any potential challenges related to data quality that you foresee (e.g., missing data, inconsistencies, or the need to merge multiple datasets). Mention your preliminary plan to tackle these issues. | . Important Note: . Statements of Work that do not include information on available and relevant data will not be accepted. Step 4: Define Scope and Preliminary Design . The scope of your project is largely up to you and your team. Whether it’s simple or complex, the aim should be to align with the course’s learning objectives. However, for a project to be considered comprehensive, it should ideally include a few of the following minimum components: . Minimum Components for a Good Project: . | Large or Heterogeneous Data: Your project should involve a sizable or diverse dataset that requires careful handling and processing. | Scalability: Consider how your solution will scale for many users, particularly in the application you intend to build. | Complex Models: The project should explore models that are challenging to train, which will showcase your understanding of MLOps challenges. | Computationally Expensive Inference: If your project involves inference models, they should be computationally intensive to align with real-world challenges. | . Problem Statement: . | Clearly outline the problem or question your project addresses. | . Objectives: . | List the primary goals or outcomes, which should align with your problem statement and the minimum components outlined above. | . Learning Emphasis: . | Opt for models and methods that your team understands. The project should reflect your grasp of course concepts. | . Application Mock Design: . | Include a preliminary design or sketch for the application you intend to develop. This could range from simple wireframes to a more detailed, clickable prototype. | . Research and Development: . | Reference papers, blog posts, or other scholarly materials that aid your project and align with your objectives. | . Fun Factor: . | The project should also be a space for you to enjoy both the subject matter and the developmental process. | . Limitations and Risks: . | Discuss any anticipated challenges or limitations, such as data quality issues or technical constraints. | . Milestones: . | List key milestones for both your project and application development. Include tentative deadlines, if possible. | . Important Note: . Statements of Work that do not include both a well-defined scope and a preliminary design for the application will not be accepted. Deliverables: Submit a PDF or word document of your proposal on canvas by the end of the day on Sep 14th. Below are two samples SOW for such apps: . Sample Proposal . ",
    "url": "/milestone1/",
    
    "relUrl": "/milestone1/"
  },"22": {
    "doc": "Milestone 2",
    "title": "Milestone 2",
    "content": "Milestone 2 (the wheel): MLOps Infrastructure &amp; Advanced Training Workflows - Building Atomic Containers, Versioned Data Pipelines, and Scalable Computing Solutions . In this milestone, the focus is on developing a robust and scalable MLOps infrastructure. Teams will build atomic containers for various project components, design data pipelines with version control using tools like Apache Delta Lake, and integrate distributed computing solutions alongside cloud storage . Key dates: . | Due date: Sep 26th | . Objectives: . | Build Atomic Containers for Components: Create containerized solutions for various components using standalone containers that can run independently. This will include the development of atomic containers for individual applications and services involved in the project. | Construct Data Pipelines with Versioning: Design and implement a robust data pipeline that leverages Extract, Transform, Versioning tools like Delta Lake or Pachyderm/DVC. This will enable efficient data handling and version control within the project. | . Deliverables: . | Containerized Components: Fully-functional atomic containers for all individual components, aligned and ready for integration within the project architecture. | Virtual Environment Setup: Documented and implemented virtual machines and environments tailored to support the containerized components. | . ",
    "url": "/milestone2/",
    
    "relUrl": "/milestone2/"
  },"23": {
    "doc": "Milestone 3",
    "title": "Milestone 3",
    "content": "Milestone 3 (steam engine): Building a Scalable and Modular Computing Infrastructure . In this milestone, the focus is on developing an advanced training workflows and TensorFlow-based data management will also be implemented to enhance machine learning capabilities and streamline the project’s complexities. Key dates: . | Due date: Oct 5th | . Objectives: . | Integrate Distributed Computing and Cloud Storage: Implement distributed computing solutions using tools like Dask, and align with cloud storage systems that support the scale and complexity of the project. | Utilize TensorFlow for Data Management: Implement TF Data and TF Records to enhance data ingestion and management within machine learning components of the project. | Develop Advanced Training Workflows: Implement and optimize complex training workflows including experiment tracking (W&amp;B), multi-GPU training, serverless training (Vertex AI), and Kubeflow. These should align with the machine learning components and training requirements of the project. | . Deliverables: . | Data Pipeline Implementation: A comprehensive data pipeline with extraction, transformation, and versioning capabilities, including examples of versioned datasets. | Distributed Computing and Storage Integration: Evidence of the implemented distributed computing system and cloud storage solutions, complete with documentation on their configuration and utilization. | Machine Learning Workflow Implementation: Detailed implementation of the advanced training workflows, with evidence of successful training runs, experiment tracking, and utilization of multi-GPU and serverless training. | . ",
    "url": "/milestone3/",
    
    "relUrl": "/milestone3/"
  },"24": {
    "doc": "Milestone 4",
    "title": "Milestone 4",
    "content": "Milestone 4 (internal combustion engine): Midterm Presentation: Optimization, Monitoring, and Deployment of Scalable Data Solutions . Note: This milestone serves as the midterm presentation for AC215. This milestone focuses on the optimization, monitoring, and deployment aspects of a complex data-driven project. It emphasizes efficiency and scalability, utilizing advanced techniques and tools like TensorFlow Lite for model optimization and Kubeflow for machine learning workflows. The integration of a comprehensive performance monitoring system ensures ongoing reliability, and the creation of a “Mega Pipeline” application represents the culminating hands-on experience that brings all elements together in a cohesive, manageable structure. The fourth milestone builds on the foundational work of the first three, driving the project towards completion and ensuring readiness for real-world application. This will provide students with exposure to industry-standard best practices and hands-on experience with cutting-edge tools and methodologies. Finally, the milestone serves as an opportunity to practice presenting information to a technical audience in an engaging and concise manner. Key dates: . | Due date: Oct 24th | . Objectives: . | Distillation/Quantization/Compression, TF lite: Implement methods for model optimization such as distillation, quantization, and compression, using TensorFlow Lite. This will enable deployment in resource-constrained environments. | Model Performance Monitoring, Data Drift Awareness: Develop a comprehensive monitoring solution to continuously track model performance, detect data drift, and ensure awareness of other post-release factors that may impact the system. | Kubeflow and Cloud Functions Integration: Utilize Kubeflow for machine learning workflows and integrate cloud functions to automate and scale various processes within the project, aligning with cloud-native practices. | Build a Hands-on Mega Pipeline App: Design and create a scalable and comprehensive pipeline application that encapsulates all the elements of the project. This “Mega Pipeline” will serve as the unified interface for managing and executing various project components. | Presenting a Technical Project: Create a presentation that concisely covers what has been accomplished up to this point, and what the plan is for next steps. Here are some useful questions to think about when creating the presentation: Who is the audience (technical or non-technical), and what information can you expect them to know (and not know) going into the presentation? What’s the story that you are trying to tell? How are you planning to tell that story? What do you want the audience to take away from the presentation? . | . Deliverables: . | Optimized Models: Models that have been distilled, quantized, or compressed using TensorFlow Lite, complete with performance benchmarks and analysis. | Performance Monitoring Solution: A well-documented monitoring system that provides insights into model performance, data drift, and other relevant factors. Includes alerting and reporting mechanisms. | Kubeflow &amp; Cloud Functions Implementation: Documentation and code showcasing the successful integration of Kubeflow for machine learning orchestration and cloud functions for process automation. | Mega Pipeline Application: A fully-functional CLI based mega pipeline application that serves as the control center for the project, enabling the seamless execution of various components from data ingestion to model deployment. Should include detailed documentation and user guides. | Presentation: A 4-5 minute presentation that includes a brief overview of the project to help orient the audience, a walk-through of the work that has been completed, and a brief outline of next steps. The walk-through does not need to be a live demo (it can be a set of well-made, visually-pleasing slides), but it should make sure to showcase and highlight the various components that have been built. Be prepared for 3 additional minutes of questions at the end. | . ",
    "url": "/milestone4/",
    
    "relUrl": "/milestone4/"
  },"25": {
    "doc": "Milestone 5",
    "title": "Milestone 5",
    "content": "Milestone 5 (hybrid and electric): Development, Deployment, and Scaling of Application . Milestone 5 emphasizes the final stages of the project, focusing on the development and deployment of a user-facing application that ties together the various components built in previous milestones. From designing an intuitive user interface to implementing scalable solutions with Kubernetes, this milestone ensures that the project is not only functional but also ready for real-world usage. Key dates: . | Due date: Nov 14th | . Objectives: . | App Design, Setup, and Code Organization: Design the overall architecture of the application, including its user interface, functionality, and underlying code structure. Focus on intuitive design and clean code organization to ensure maintainability and efficiency. | APIs &amp; Frontend Integration: Develop robust APIs that facilitate communication between the front end and back end of the application. Implement a responsive and user-friendly front-end interface that leverages these APIs to create a seamless user experience. | Deployment Strategy: Define and implement a comprehensive deployment strategy that ensures the application is readily available to end users. This includes setting up continuous integration and continuous deployment (CI/CD) pipelines and considering factors like security, performance, and reliability. | . Deliverables: . | Application Design Document: A detailed design document outlining the application’s architecture, user interface, and code organization principles. The design should include the following . | Solution Architecture | Technical Architecture | . | APIs &amp; Frontend Implementation: Working code for the APIs and front-end interface, complete with documentation and testing to verify proper functionality. The following should be included . | Github repo with all you code | Readme file describing all the components of your application | . | . ",
    "url": "/milestone5/",
    
    "relUrl": "/milestone5/"
  },"26": {
    "doc": "Milestone 6",
    "title": "Milestone 6",
    "content": "Milestone 6: AC215. Final Scaling, Deployment, and Project Presentation . The final milestone represents the culmination of the project, with a focus on perfecting the scaling and deployment aspects, and on communicating the project’s success. It ensures that the project is robust, scalable, and deployable, and that the team can effectively convey the significance and details of the project to diverse audiences. By completing this milestone, students demonstrate not only their technical mastery but also their ability to present complex projects in an accessible way. The inclusion of a GitHub repository and blog post ensures that the project has a lasting impact, providing a valuable resource for others in the field. The final milestone is a comprehensive reflection of the skills, knowledge, and experiences gained throughout the project, embodying a holistic approach to modern software development and deployment. It provides a fitting conclusion to the project, reflecting both the technical achievements and the broader educational objectives. Key dates: . | Due date: Dec 12th | . Objectives: . | Scaling with Kubernetes: Continue to refine and expand the Kubernetes-based scaling solution. Ensure that the application can handle real-world scenarios and peak loads efficiently. | Deployment with Ansible: Implement an automated deployment solution using Ansible. This will enable streamlined deployment processes, configuration management, and ensure consistency across different environments. | Presentation of the Project: Prepare and deliver a comprehensive presentation that highlights the project’s objectives, design, implementation, challenges, and achievements. | GitHub Repository: Organize and publish all code, documentation, and relevant assets in a GitHub repository, ensuring that it’s well-structured and includes clear instructions for anyone who wants to replicate or learn from the project. | Blog Post: Write an informative and engaging blog post summarizing the project, the technologies used, lessons learned, and the overall experience. This can serve as a public showcase of the project and the methodologies employed. | . Deliverables: . | Deployment Plan and Execution: A documented deployment plan, along with evidence of successful deployment, including CI/CD pipelines, monitoring, and other deployment best practices. | Kubernetes Scaling Solution: A fully implemented scaling solution using Kubernetes, with detailed documentation on its configuration, policies, and performance under different load scenarios. | Project Presentation: A compelling presentation (slides and speech) that provides a concise and clear overview of the entire project, suitable for both technical and non-technical audiences. | GitHub Repository: A well-organized GitHub repository containing all the project’s code, documentation, related resources, and a professional README. | Medium Post: A published Medium post that encapsulates the essence of the project, written in a style that appeals to a broad audience. | . ",
    "url": "/milestone6/",
    
    "relUrl": "/milestone6/"
  },"27": {
    "doc": "Projects",
    "title": "Milestones",
    "content": "Project Milestones - Overview . | Milestones | Brief Description | Due Date | Grade % | . | MS1 | Project Proposals, Team formation - Students submit project proposals and form teams. Staff reviews proposals and return feedback and project approvals by 09/19. | 09/14 | 5 | . | MS2 | MLOps Infrastructure &amp; Advanced Training Workflows - Building atomic containers, versioned data pipelines, and scalable computing solutions. | 09/26 | 10 | . | MS3 | Scalable and Moduler Computing Infrastructure - Extending advanced training workflows with Tensorflow, experiment tracking, multi-GPU training and serverless training. | 10/05 | 15 | . | MS4 | Midterm Presentation - Presenting a fully functional CLI-based mega pipeline application with model optimization, performance monitoring, and severless inference. | 10/24 | 25 | . | MS5 | Full-Stack Development - Design a user-friendly frontend developed around working API calls and design documents. | 11/14 | 10 | . | MS6 | Final Presentation and Deliverables - Students will finish by working through deployment and scaling, documenting the project through a published Medium post, a 6-minute video presentation, and a well-organized GitHub repository. | 12/12 | 35 | . Guidelines, submission instruction for milestones (and medium page) for future project events will be posted as they approach. ",
    "url": "/projects/#milestones",
    
    "relUrl": "/projects/#milestones"
  },"28": {
    "doc": "Projects",
    "title": "Projects",
    "content": " ",
    "url": "/projects/",
    
    "relUrl": "/projects/"
  },"29": {
    "doc": "Readings",
    "title": "Virtual Environments",
    "content": "Pipenv: Python Dev Workflow for Humans . Getting Started with Python Virtual Environments - Venv . Getting started with Python Virtual Environments using Conda: Why . Getting started with Python Virtual Environments using Conda: How . ",
    "url": "/readings/#virtual-environments",
    
    "relUrl": "/readings/#virtual-environments"
  },"30": {
    "doc": "Readings",
    "title": "Virtual Machines",
    "content": "How to Install a Windows 10 on Your Mac . Enable Virtual Machines in Windows 10 . ",
    "url": "/readings/#virtual-machines",
    
    "relUrl": "/readings/#virtual-machines"
  },"31": {
    "doc": "Readings",
    "title": "Readings",
    "content": " ",
    "url": "/readings/",
    
    "relUrl": "/readings/"
  },"32": {
    "doc": "Schedule and Calendar",
    "title": "Schedule and Calendar",
    "content": "Overall schedule can be found here and calendar here. ",
    "url": "/schedule/",
    
    "relUrl": "/schedule/"
  },"33": {
    "doc": "Schedule and Calendar",
    "title": "Week 1 - Introduction, Virtual Environments and Virtual Machines",
    "content": "Sep 05 Introduction Lecture 1 ,   Setup &amp; Installation Sep 07 Virtual Environments and Virtual Machines Lecture 2 ",
    "url": "/schedule/#week-1-introduction-virtual-environments-and-virtual-machines",
    
    "relUrl": "/schedule/#week-1-introduction-virtual-environments-and-virtual-machines"
  },"34": {
    "doc": "Schedule and Calendar",
    "title": "Week 2 - Containers",
    "content": "Sep 12 Containers I Lecture 3 M 1 due Sep 14 Containers II Lecture 4 ",
    "url": "/schedule/#week-2-containers",
    
    "relUrl": "/schedule/#week-2-containers"
  },"35": {
    "doc": "Schedule and Calendar",
    "title": "Week 3 - Data",
    "content": "Sep 19 Data Pipelines, Extract, Transform, Versioning (e.g: Apache Delta Lake, Pachyderm/DVC) Lecture 5 Sep 21 Dask, Cloud Storage Lecture 6 ",
    "url": "/schedule/#week-3-data",
    
    "relUrl": "/schedule/#week-3-data"
  },"36": {
    "doc": "Schedule and Calendar",
    "title": "Week 4 - Data and Models",
    "content": "Sep 26 TF Data and TF Records Lecture 7 M 2 due Sep 28 Advanced training workflows: experiment tracking (W&amp;B), multi GPU, serverless training (Vertex AI), kubeflow Lecture 8 ",
    "url": "/schedule/#week-4-data-and-models",
    
    "relUrl": "/schedule/#week-4-data-and-models"
  },"37": {
    "doc": "Schedule and Calendar",
    "title": "Week 5 - Project Week",
    "content": "M 3 due . ",
    "url": "/schedule/#week-5-project-week",
    
    "relUrl": "/schedule/#week-5-project-week"
  },"38": {
    "doc": "Schedule and Calendar",
    "title": "Week 6 - Model",
    "content": "Oct 10 Distillation/Quantization/Compression, TF lite Lecture 9 Oct 12 Model performance monitoring, data drift, or other post release items to be aware of Lecture 10 ",
    "url": "/schedule/#week-6-model",
    
    "relUrl": "/schedule/#week-6-model"
  },"39": {
    "doc": "Schedule and Calendar",
    "title": "Week 7 - ML Workflow Management",
    "content": "Oct 17 Kubeflow, cloud functions Lecture 11 Oct 19 Hands on Mega Pipeline App Lecture 12 ",
    "url": "/schedule/#week-7-ml-workflow-management",
    
    "relUrl": "/schedule/#week-7-ml-workflow-management"
  },"40": {
    "doc": "Schedule and Calendar",
    "title": "Week 8 - Midterm presentations",
    "content": "Oct 26 Midterm presentations M 4 due ",
    "url": "/schedule/#week-8-midterm-presentations",
    
    "relUrl": "/schedule/#week-8-midterm-presentations"
  },"41": {
    "doc": "Schedule and Calendar",
    "title": "Week 9 - App Development",
    "content": "Oct 31 App design, setup and code organization Lecture 13 Nov 2 APIs &amp; Frontend Lecture 14 ",
    "url": "/schedule/#week-9-app-development",
    
    "relUrl": "/schedule/#week-9-app-development"
  },"42": {
    "doc": "Schedule and Calendar",
    "title": "Week 10 - App Development",
    "content": "Nov 7 APIs &amp; Frontend Lecture 15 Nov 9 Deployment Lecture 16 ",
    "url": "/schedule/#week-10-app-development",
    
    "relUrl": "/schedule/#week-10-app-development"
  },"43": {
    "doc": "Schedule and Calendar",
    "title": "Week 11 - Scaling &amp; Deployment",
    "content": "Nov 14 Scaling: Kubernetes Lecture 17 M 5 due Nov 16 Projects ",
    "url": "/schedule/#week-11-scaling-deployment",
    
    "relUrl": "/schedule/#week-11-scaling-deployment"
  },"44": {
    "doc": "Schedule and Calendar",
    "title": "Week 12 - Thanks giving",
    "content": " ",
    "url": "/schedule/#week-12-thanks-giving",
    
    "relUrl": "/schedule/#week-12-thanks-giving"
  },"45": {
    "doc": "Schedule and Calendar",
    "title": "Week 13 - Scaling &amp; Deployment",
    "content": "Nov 28 Scaling: Kubernetes Lecture 18 Nov 30 Deployment: Ansible Lecture 19 ",
    "url": "/schedule/#week-13-scaling-deployment",
    
    "relUrl": "/schedule/#week-13-scaling-deployment"
  },"46": {
    "doc": "Schedule and Calendar",
    "title": "Week 14 -  Projects",
    "content": " ",
    "url": "/schedule/#week-14-projects",
    
    "relUrl": "/schedule/#week-14-projects"
  },"47": {
    "doc": "Schedule and Calendar",
    "title": "Week 15 - Presentations",
    "content": "Dec 12 Presentations M 6 due Setup &amp; Installation . Refer to the setup and installtion document for a full list of softwares and tools we will be using in this class . Policy on Usage of Publicly Available Class Material . | Permitted Use: Class Material is made available primarily for the educational benefit of enrolled students and may be used by others for personal educational purposes only. | Prohibited Use: . | Selling or commercializing any part of the Class Material. | Sharing, distributing, or publishing any part of the Class Material in any form or through any medium without explicit permission from the instructor. | Modifying or altering the Class Material to create derivative works. | . | Attribution: Any permitted use of the Class Material must carry appropriate acknowledgment of the source (e.g., the instructor’s name, course title, and institution). | Enforcement: Failure to comply with this policy may result in legal action and/or disciplinary measures as applicable. | . Consent: . By accessing and using the Class Material, you indicate your acknowledgment and acceptance of this policy. ",
    "url": "/schedule/#week-15-presentations",
    
    "relUrl": "/schedule/#week-15-presentations"
  },"48": {
    "doc": "Staff / Contact",
    "title": "Staff",
    "content": " ",
    "url": "/staff/#staff",
    
    "relUrl": "/staff/#staff"
  },"49": {
    "doc": "Staff / Contact",
    "title": "Instructor",
    "content": "Pavlos Protopapas . https://www.stellardnn.org/ . ",
    "url": "/staff/#instructor",
    
    "relUrl": "/staff/#instructor"
  },"50": {
    "doc": "Staff / Contact",
    "title": "Contact",
    "content": "For administrative or logistical questions, please e-mail class Helpline at ac215.2023@gmail.com . ",
    "url": "/staff/#contact",
    
    "relUrl": "/staff/#contact"
  },"51": {
    "doc": "Staff / Contact",
    "title": "Office Hours",
    "content": "TBD . ",
    "url": "/staff/#office-hours",
    
    "relUrl": "/staff/#office-hours"
  },"52": {
    "doc": "Staff / Contact",
    "title": "Course Staff",
    "content": "Rashmi Banthia . Andrew Smith . Connor Capitolo . Matthew Nazari . Shivas Jayaram . Tale Lokvenec . ",
    "url": "/staff/#course-staff",
    
    "relUrl": "/staff/#course-staff"
  },"53": {
    "doc": "Staff / Contact",
    "title": "Staff / Contact",
    "content": " ",
    "url": "/staff/",
    
    "relUrl": "/staff/"
  }
}
